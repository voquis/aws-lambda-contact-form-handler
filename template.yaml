# AWS Serverless Application Model (SAM) template
AWSTemplateFormatVersion: '2010-09-09'
Transform: AWS::Serverless-2016-10-31
Description: Sample SAM Template for sam-app

Globals:
  Function:
    Timeout: 3
  Api:
    Cors:
      AllowOrigin: "'*'"
      AllowMethods: "'*'"

Resources:
  LambdaFunction:
    Type: AWS::Serverless::Function
    Properties:
      CodeUri: lambda/
      Handler: app.handler
      Runtime: python3.9
      Architectures:
        - x86_64
      Policies:
        - DynamoDBCrudPolicy:
            TableName: !Ref messages
      Environment:
        Variables:
          # General config
          LOG_LEVEL: DEBUG
          REQUIRED_FIELDS: name, email, subject, message
          # hCaptcha config, demo sitekey and secret values provided below (do not provide any protection).
          # Be sure to use real account values to actually protect this service.
          # For integration details see https://docs.hcaptcha.com/#integration-testing-test-keys
          HCAPTCHA_ENABLE: true
          HCAPTCHA_SITEKEY: '10000000-ffff-ffff-ffff-000000000001'
          HCAPTCHA_SECRET: '0x0000000000000000000000000000000000000000'
          # DynamoDB config
          # Set the endpoint URL following if using DynamoDB local
          DYNAMODB_ENABLE: true
          DYNAMODB_TABLE: website-contact
          # DYNAMODB_ENDPOINT_URL: http://dynamodb:8000
          # Email sending config
          EMAIL_ENABLE: true
          EMAIL_RECIPIENTS: test1@example.com,test2@example.com
          EMAIL_SENDER: contact@example.com
          EMAIL_SUBJECT_TEMPLATE: Contact form - ${subject}
          EMAIL_TEXT_TEMPLATE: |
            Hello,

            A New contact submission was received with the following details:
            Name: ${name}
            Email: ${email}
            Message: ${message}
          # Discord messaging config
          DISCORD_ENABLE: true
          DISCORD_WEBHOOK_URL: "https://discord.com/api/webhooks/123/abc"
          DISCORD_JSON_TEMPLATE: |
            {
              "username":"Contact Service",
              "content":"New contact submission",
              "embeds": [
                {
                  "author": {
                    "name": "${name}"
                  },
                  "title": "${subject}",
                  "description": "${message}",
                  "color": 15258703,
                  "footer": {
                    "text": "Sent using Contact Handler"
                  }
                }
              ]
            }
          # Slack messaging config
          SLACK_ENABLE: true
          SLACK_WEBHOOK_URL: "https://hooks.slack.com/services/abc/xyz/123"
          SLACK_JSON_TEMPLATE: |
            {
              "blocks": [
                {
                  "type": "section",
                  "text": {
                    "type": "mrkdwn",
                    "text": "New contact from :${name}\nEmail: *${email}*"
                  }
                },
                {
                  "type": "section",
                  "fields": [
                    {
                      "type": "mrkdwn",
                      "text": "*${subject}*\n${message}"
                    }
                  ]
                }
              ]
            }
      # https://docs.aws.amazon.com/serverless-application-model/latest/developerguide/sam-property-function-eventsource.html
      Events:
        Api:
          Type: Api
          Properties:
            Path: /api
            Method: post
        HTTPApiV2:
          Type: HttpApi
          Properties:
            Path: /httpapiv2
            Method: post
